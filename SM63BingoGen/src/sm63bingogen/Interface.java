package sm63bingogen;

import sm63bingogen.Model.BingoGen;
import sm63bingogen.Exceptions.NoGeneratedJsonException;
import sm63bingogen.Exceptions.NoImportedFileException;
import java.awt.Dimension;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFileChooser;
import sm63bingogen.IHM.Message;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author KÃ©vin
 */
public class Interface extends javax.swing.JFrame {
    
    /**
     * Creates new form Interface
     */
    public Interface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        fileChooser = new javax.swing.JFileChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jD_about = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTA_about = new javax.swing.JTextArea();
        jD_howToUse = new javax.swing.JDialog();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTA_howToUse = new javax.swing.JTextArea();
        jb_generateJSON = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        jb_copyClipboard = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jm_file = new javax.swing.JMenu();
        jmi_importGoals = new javax.swing.JMenuItem();
        jm_help = new javax.swing.JMenu();
        jm_howToUse = new javax.swing.JMenuItem();
        jm_about = new javax.swing.JMenuItem();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        jMenu5.setText("File");
        jMenuBar3.add(jMenu5);

        jMenu6.setText("Edit");
        jMenuBar3.add(jMenu6);

        fileChooser.setDialogTitle("Import goals...");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jD_about.setLocationByPlatform(true);
        jD_about.setMaximumSize(new java.awt.Dimension(400, 300));
        jD_about.setMinimumSize(new java.awt.Dimension(400, 100));
        jD_about.setPreferredSize(new java.awt.Dimension(400, 150));
        jD_about.setResizable(false);

        jTA_about.setEditable(false);
        jTA_about.setColumns(20);
        jTA_about.setRows(5);
        jScrollPane3.setViewportView(jTA_about);

        javax.swing.GroupLayout jD_aboutLayout = new javax.swing.GroupLayout(jD_about.getContentPane());
        jD_about.getContentPane().setLayout(jD_aboutLayout);
        jD_aboutLayout.setHorizontalGroup(
            jD_aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jD_aboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );
        jD_aboutLayout.setVerticalGroup(
            jD_aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jD_aboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jD_howToUse.setMaximumSize(new java.awt.Dimension(400, 300));
        jD_howToUse.setMinimumSize(new java.awt.Dimension(400, 100));
        jD_howToUse.setResizable(false);

        jTA_howToUse.setEditable(false);
        jTA_howToUse.setColumns(20);
        jTA_howToUse.setRows(5);
        jScrollPane4.setViewportView(jTA_howToUse);

        javax.swing.GroupLayout jD_howToUseLayout = new javax.swing.GroupLayout(jD_howToUse.getContentPane());
        jD_howToUse.getContentPane().setLayout(jD_howToUseLayout);
        jD_howToUseLayout.setHorizontalGroup(
            jD_howToUseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jD_howToUseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );
        jD_howToUseLayout.setVerticalGroup(
            jD_howToUseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jD_howToUseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jb_generateJSON.setText("Generate JSON");
        jb_generateJSON.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jb_generateJSONMouseExited(evt);
            }
        });
        jb_generateJSON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_generateJSONActionPerformed(evt);
            }
        });

        textArea.setEditable(false);
        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        jb_copyClipboard.setText("Copy to Clipboard");
        jb_copyClipboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jb_copyClipboardMouseExited(evt);
            }
        });
        jb_copyClipboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_copyClipboardActionPerformed(evt);
            }
        });

        jm_file.setText("File");

        jmi_importGoals.setText("Import goals...");
        jmi_importGoals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_importGoalsActionPerformed(evt);
            }
        });
        jm_file.add(jmi_importGoals);

        jMenuBar1.add(jm_file);

        jm_help.setText("Help");

        jm_howToUse.setText("How to use");
        jm_howToUse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_howToUseActionPerformed(evt);
            }
        });
        jm_help.add(jm_howToUse);

        jm_about.setText("About ...");
        jm_about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_aboutActionPerformed(evt);
            }
        });
        jm_help.add(jm_about);

        jMenuBar1.add(jm_help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jb_generateJSON)
                        .addGap(59, 59, 59)
                        .addComponent(jb_copyClipboard)
                        .addGap(80, 80, 80))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_generateJSON)
                    .addComponent(jb_copyClipboard))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_generateJSONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_generateJSONActionPerformed
        // TODO add your handling code here:
        
        //jTextField1.setText(BingoGen.getInstance().generate());
        
        Dimension size = jb_generateJSON.getSize();
        
        try {
            BingoGen.get().generate();
            
            try {
                textArea.setText(BingoGen.get().getJsonSeed().getSeedLinebreak());
            } catch (Exception e) {
                System.out.println(e);
                
            }
            
        } catch(NoImportedFileException e) {
            jb_generateJSON.setText(Message.getInstance().get("b_generateJson_error"));
        }
        
        // Fixes the size of the button (bad)
        jb_generateJSON.setSize(size);
        jb_generateJSON.setPreferredSize(size);
        jb_generateJSON.setMaximumSize(size); 
        
        
    }//GEN-LAST:event_jb_generateJSONActionPerformed

    private void jb_copyClipboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_copyClipboardActionPerformed
        // TODO add your handling code here:
        
        Dimension size = jb_copyClipboard.getSize();
        
        try {
            BingoGen.get().copyToClipboard();
            jb_copyClipboard.setText(Message.getInstance().get("b_copyClipboard_valid"));  
        } catch(NoGeneratedJsonException e) {
            jb_copyClipboard.setText(Message.getInstance().get("b_copyClipboard_error"));
        }
        
        // Fixes the size of the button (bad)
        jb_copyClipboard.setSize(size);
        jb_copyClipboard.setPreferredSize(size);
        jb_copyClipboard.setMaximumSize(size); 
        
    }//GEN-LAST:event_jb_copyClipboardActionPerformed

    private void jb_copyClipboardMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_copyClipboardMouseExited
        // TODO add your handling code here:
        jb_copyClipboard.setText(Message.getInstance().get("b_copyClipboard"));
    }//GEN-LAST:event_jb_copyClipboardMouseExited

    private void jmi_importGoalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_importGoalsActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
              // What to do with the file, e.g. display it in a TextArea
              //textArea.read( new FileReader( file.getAbsolutePath() ), null );
              
              BingoGen.get().setFilepath(file.getAbsolutePath());
              BingoGen.get().importGoals(file.getAbsolutePath());
            
            } catch (IOException ex) {
              System.out.println("problem accessing file"+file.getAbsolutePath());
            }
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_jmi_importGoalsActionPerformed

    private void jb_generateJSONMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_generateJSONMouseExited
        // TODO add your handling code here:
        jb_generateJSON.setText(Message.getInstance().get("b_generateJson"));
    }//GEN-LAST:event_jb_generateJSONMouseExited

    private void jm_aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_aboutActionPerformed
        // TODO add your handling code here:
        jD_about.pack();
        jD_about.setVisible(true);
        jD_about.setTitle("About");
        jTA_about.setText(Message.getInstance().get("about"));
    }//GEN-LAST:event_jm_aboutActionPerformed

    private void jm_howToUseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_howToUseActionPerformed
        // TODO add your handling code here:
        jD_howToUse.pack();
        jD_howToUse.setVisible(true);
        jD_howToUse.setTitle("How to Use");
        jTA_howToUse.setText(Message.getInstance().get("howToUse"));
    }//GEN-LAST:event_jm_howToUseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Interface().setVisible(true);
                Interface instance = new Interface();
                instance.setVisible(true);
                instance.setTitle(Message.getInstance().get("title"));
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JDialog jD_about;
    private javax.swing.JDialog jD_howToUse;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTA_about;
    private javax.swing.JTextArea jTA_howToUse;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton jb_copyClipboard;
    private javax.swing.JButton jb_generateJSON;
    private javax.swing.JMenuItem jm_about;
    private javax.swing.JMenu jm_file;
    private javax.swing.JMenu jm_help;
    private javax.swing.JMenuItem jm_howToUse;
    private javax.swing.JMenuItem jmi_importGoals;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
